import{_ as t,o as e,c as a,V as o}from"./chunks/framework.JWZrZsxi.js";const f=JSON.parse('{"title":"Environment or Database Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"config/environment-db.md","filePath":"config/environment-db.md","lastUpdated":1707862450000}'),r={name:"config/environment-db.md"},d=o('<h1 id="environment-or-database-configuration" tabindex="-1">Environment or Database Configuration <a class="header-anchor" href="#environment-or-database-configuration" aria-label="Permalink to &quot;Environment or Database Configuration&quot;">​</a></h1><p>The configuration settings for the applications are loaded from docker container by environment or from your database. If you have a configuration in you environment variables that one ALWAYS wins. The System checks the variable in the database und update them with the value from your System Env</p><p>The configurations can also change by using the configuration routes.</p><h2 id="auth" tabindex="-1">Auth <a class="header-anchor" href="#auth" aria-label="Permalink to &quot;Auth&quot;">​</a></h2><table><thead><tr><th>Configuration</th><th>Description</th><th style="text-align:center;">Default</th></tr></thead><tbody><tr><td>AUTH_HANDLER</td><td>Handler for managing User and Role Data. Possible Values: <code>mongo</code> or <code>static</code></td><td style="text-align:center;">mongo</td></tr><tr><td>AUTH_APIKEYLENGTH</td><td>Length of the generated API Key</td><td style="text-align:center;">32</td></tr><tr><td>AUTH_SECRET</td><td>Private Key for JWT</td><td style="text-align:center;">secret_key</td></tr><tr><td>AUTH_CACHE_DB</td><td>Should the JWT cached to the DB to keep it after application restart.</td><td style="text-align:center;">true</td></tr><tr><td>AUTH_EXPIRING_DURATION</td><td>Lifetime of generated JWT</td><td style="text-align:center;">6h</td></tr><tr><td>AUTH_BEARER</td><td>Enable Bearer Header Token for secured routes.</td><td style="text-align:center;">true</td></tr><tr><td>AUTH_BASIC</td><td>Enable HttpBasicAuth for secured routes.</td><td style="text-align:center;">true</td></tr><tr><td>AUTH_TOKEN</td><td>Enable Api Key Token for secured routes.</td><td style="text-align:center;">true</td></tr></tbody></table><h2 id="server" tabindex="-1">Server <a class="header-anchor" href="#server" aria-label="Permalink to &quot;Server&quot;">​</a></h2><table><thead><tr><th>Configuration</th><th>Description</th><th style="text-align:center;">Default</th></tr></thead><tbody><tr><td>SERVER_INTERFACE</td><td></td><td style="text-align:center;">0.0.0.0</td></tr><tr><td>SERVER_PORT</td><td></td><td style="text-align:center;">8080</td></tr></tbody></table><h2 id="cors" tabindex="-1">CORS <a class="header-anchor" href="#cors" aria-label="Permalink to &quot;CORS&quot;">​</a></h2><table><thead><tr><th>Configuration</th><th>Description</th><th style="text-align:center;">Default</th></tr></thead><tbody><tr><td>CORS_HEADERS_ALLOWED</td><td>Used as Access-Control-Allow-Origin</td><td style="text-align:center;"><code>[&quot;Authorization&quot;, &quot;Content-Type&quot;, &quot;X-Requested-With&quot;, &quot;X-AUTH-APIKEY&quot;]</code></td></tr><tr><td>CORS_HEADERS_EXPOSED</td><td>Used as Access-Control-Expose-Headers</td><td style="text-align:center;"><code>[&quot;Content-Type&quot;, &quot;x-pagination-rows-per-page&quot;, &quot;x-pagination-current-page&quot;, &quot;x-pagination-count-rows&quot;, &quot;x-pagination-count-pages&quot;]</code></td></tr><tr><td>CORS_ORIGINS_ALLOWED</td><td>Access-Control-Expose-HeadersAccess-Control-Expose-Headers</td><td style="text-align:center;"><code>[&quot;http://localhost:8080&quot;]</code></td></tr></tbody></table><h2 id="file" tabindex="-1">File <a class="header-anchor" href="#file" aria-label="Permalink to &quot;File&quot;">​</a></h2><table><thead><tr><th>Configuration</th><th>Description</th><th style="text-align:center;">Default</th></tr></thead><tbody><tr><td>FILE_HANDLER</td><td>Default only supported <code>gridfs</code>. Possible to extend with Plugin.</td><td style="text-align:center;">gridfs</td></tr><tr><td>FILE_CACHE_AGE</td><td>Used at File Header <code>cache-control</code> with value <code>max-age=</code></td><td style="text-align:center;">7776000</td></tr></tbody></table><h2 id="plugins" tabindex="-1">Plugins <a class="header-anchor" href="#plugins" aria-label="Permalink to &quot;Plugins&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>All plugins in Folder and Modules will be activated automatically. If your want to exclude one of this plugins use <code>PLUGINS_IGNORED</code>, for example if you don&#39;t want to expose Metrics you can add <code>dev.mongocamp.server.route.MetricsRoutes$</code> to ignored plugins.</p></div><table><thead><tr><th>Configuration</th><th>Description</th><th style="text-align:center;">Default</th></tr></thead><tbody><tr><td>PLUGINS_IGNORED</td><td>List of ignored Plugins.</td><td style="text-align:center;"><code>[]</code></td></tr><tr><td><a href="./properties/plugins-module.html">PLUGINS_MODULES</a></td><td>List of your used Plugins / Maven Dependencies.</td><td style="text-align:center;"><code>[]</code></td></tr><tr><td><a href="./properties/plugins-mvn.html">PLUGINS_MAVEN_REPOSITORIES</a></td><td>List of your special MVN Repository (maybe private).</td><td style="text-align:center;"><code>[]</code></td></tr><tr><td>PLUGINS_DIRECTORY</td><td>Directory where the app search the plugins.</td><td style="text-align:center;"><code>/opt/mongocamp/plugins</code></td></tr><tr><td><a href="./properties/plugins-urls.html">PLUGINS_URLS</a></td><td>Urls of JARs the Server should download before startup.</td><td style="text-align:center;"><code>[]</code></td></tr></tbody></table><h2 id="httpclient" tabindex="-1">HttpClient <a class="header-anchor" href="#httpclient" aria-label="Permalink to &quot;HttpClient&quot;">​</a></h2><table><thead><tr><th>Configuration</th><th>Description</th><th style="text-align:center;">Default</th></tr></thead><tbody><tr><td><a href="./properties/http-client-headers.html">HTTP_CLIENT_HEADERS</a></td><td>Additional headers for hosts saved in the Database as String containing a Json with Headers. Sample at</td><td style="text-align:center;"><code>{}</code></td></tr></tbody></table><h2 id="docs" tabindex="-1">Docs <a class="header-anchor" href="#docs" aria-label="Permalink to &quot;Docs&quot;">​</a></h2><table><thead><tr><th>Configuration</th><th>Description</th><th style="text-align:center;">Default</th></tr></thead><tbody><tr><td>DOCS_SWAGGER</td><td>Should the SwaggerUI served by server.</td><td style="text-align:center;">false</td></tr><tr><td>DOCS_OPENAPI</td><td>Should the OpenApi Yaml served by server.</td><td style="text-align:center;">true</td></tr></tbody></table>',18),n=[d];function i(l,s,c,h,u,g){return e(),a("div",null,n)}const b=t(r,[["render",i]]);export{f as __pageData,b as default};

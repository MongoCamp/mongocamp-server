/** mongocamp No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  *
  * The version of the OpenAPI document: 0.3.1
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech). https://openapi-generator.tech Do not edit the class manually.
  */
package com.quadstingray.mongo.camp.client.api

import com.quadstingray.mongo.camp.client.core.JsonSupport._
import com.quadstingray.mongo.camp.client.model.{ UserProfile, UserRole }
import sttp.client._
import sttp.model.Method

object AdminApi {

  def apply(baseUrl: String = com.quadstingray.mongo.camp.server.TestServer.serverBaseUrl) = new AdminApi(baseUrl)
}

class AdminApi(baseUrl: String) {

  /** Get UserProfile for user
    *
    * Expected answers: code 200 : UserProfile code 0 : ErrorDescription Headers : x-error-code - Error Code x-error-message - Textuelle Fehlermeldung
    * x-error-additional-info - Weitergehende Informationen zum Fehler
    *
    * Available security schemes: apiKeyAuth (apiKey) httpAuth (http)
    *
    * @param userId
    *   UserId to Update
    */
  def getUser(apiKey: String, bearerToken: String)(userId: String): Request[Either[ResponseError[Exception], UserProfile], Nothing] =
    basicRequest
      .method(Method.GET, uri"$baseUrl/admin/users/$userId")
      .contentType("application/json")
      .header("X-AUTH-APIKEY", apiKey)
      .auth
      .bearer(bearerToken)
      .response(asJson[UserProfile])

  /** Get UserRole
    *
    * Expected answers: code 200 : UserRole code 0 : ErrorDescription Headers : x-error-code - Error Code x-error-message - Textuelle Fehlermeldung
    * x-error-additional-info - Weitergehende Informationen zum Fehler
    *
    * Available security schemes: apiKeyAuth (apiKey) httpAuth (http)
    *
    * @param userRoleName
    *   UserRoleKey
    */
  def getUserRoles(apiKey: String, bearerToken: String)(userRoleName: String): Request[Either[ResponseError[Exception], UserRole], Nothing] =
    basicRequest
      .method(Method.GET, uri"$baseUrl/admin/userroles/$userRoleName")
      .contentType("application/json")
      .header("X-AUTH-APIKEY", apiKey)
      .auth
      .bearer(bearerToken)
      .response(asJson[UserRole])

  /** List all UserRolss or filtered
    *
    * Expected answers: code 200 : Seq[UserRole] Headers : x-pagination-count-rows - count all elements x-pagination-rows-per-page - Count elements per page
    * x-pagination-current-page - Current page x-pagination-count-pages - Count pages code 400 : String (Invalid value for: query parameter filter, Invalid
    * value for: query parameter rowsPerPage, Invalid value for: query parameter page) code 0 : ErrorDescription Headers : x-error-code - Error Code
    * x-error-message - Textuelle Fehlermeldung x-error-additional-info - Weitergehende Informationen zum Fehler
    *
    * Available security schemes: apiKeyAuth (apiKey) httpAuth (http)
    *
    * @param filter
    *   filter after userId by contains
    * @param rowsPerPage
    *   Count elements per page
    * @param page
    *   Requested page of the ResultSets
    */
  def listUserRoles(apiKey: String, bearerToken: String)(
      filter: Option[String] = None,
      rowsPerPage: Option[Long] = None,
      page: Option[Long] = None
  ): Request[Either[ResponseError[Exception], Seq[UserRole]], Nothing] =
    basicRequest
      .method(Method.GET, uri"$baseUrl/admin/userroles?filter=$filter&rowsPerPage=$rowsPerPage&page=$page")
      .contentType("application/json")
      .header("X-AUTH-APIKEY", apiKey)
      .auth
      .bearer(bearerToken)
      .response(asJson[Seq[UserRole]])

  /** List all Users or filtered
    *
    * Expected answers: code 200 : Seq[UserProfile] Headers : x-pagination-count-rows - count all elements x-pagination-rows-per-page - Count elements per page
    * x-pagination-current-page - Current page x-pagination-count-pages - Count pages code 400 : String (Invalid value for: query parameter filter, Invalid
    * value for: query parameter rowsPerPage, Invalid value for: query parameter page) code 0 : ErrorDescription Headers : x-error-code - Error Code
    * x-error-message - Textuelle Fehlermeldung x-error-additional-info - Weitergehende Informationen zum Fehler
    *
    * Available security schemes: apiKeyAuth (apiKey) httpAuth (http)
    *
    * @param filter
    *   filter after userId by contains
    * @param rowsPerPage
    *   Count elements per page
    * @param page
    *   Requested page of the ResultSets
    */
  def listUsers(apiKey: String, bearerToken: String)(
      filter: Option[String] = None,
      rowsPerPage: Option[Long] = None,
      page: Option[Long] = None
  ): Request[Either[ResponseError[Exception], Seq[UserProfile]], Nothing] =
    basicRequest
      .method(Method.GET, uri"$baseUrl/admin/users?filter=$filter&rowsPerPage=$rowsPerPage&page=$page")
      .contentType("application/json")
      .header("X-AUTH-APIKEY", apiKey)
      .auth
      .bearer(bearerToken)
      .response(asJson[Seq[UserProfile]])

}
